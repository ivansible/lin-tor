---
- name: install privoxy package (changes might be hidden)
  apt:
    name: privoxy
    state: present
  register: apt_privoxy_result
  # default privoxy configuration on bionic fails without ipv6 loopback
  ignore_errors: "{{ ansible_lsb.codename == 'bionic' and ansible_lo.ipv6 is not defined }}"
  # silence verbose error message
  no_log: "{{ hide_secrets |bool }}"
  # workaround for idempotence - setup is not complete if post-install actions failed
  changed_when: apt_privoxy_result is changed
                and (ansible_lsb.codename != 'bionic' or ansible_lo.ipv6 is defined)

- name: disable listener on ipv6 loopback (fails on travis)
  lineinfile:
    path: /etc/privoxy/config
    regexp: '^(listen-address\s+\[::1\]:.*)'
    line: '#\1'
    backrefs: true
  notify: restart privoxy service

- name: finish privoxy installation after fixing listener (for idempotence)
  apt:
    name: privoxy
    state: present

- name: configure privoxy listen port
  lineinfile:
    path: /etc/privoxy/config
    # default configuration on bionic 18.04 has two listen addresses:
    #  listen-address  127.0.0.1:8118
    #  listen-address  [::1]:8118
    # we want to skip the second line and avoid service error
    regexp: '^#?listen-address(?!\s+\[::1\])'
    line: 'listen-address  {{ tor_privoxy_bindip }}:{{ tor_privoxy_port }}'
    state: present
  notify: restart privoxy service

- name: configure tor forwarding in privoxy
  lineinfile:
    path: /etc/privoxy/config
    regexp: "^#?forward-socks5"
    line: "forward-socks5 / 127.0.0.1:{{ tor_socks_port }} ."
    state: present
  notify: restart privoxy service

- name: activate privoxy service
  systemd:
    name: privoxy
    state: started
    enabled: true

- name: configure privoxy log compression
  replace:
    path: /etc/logrotate.d/privoxy
    regexp: "{{ lookbehind }}(compress|delaycompress)"
    replace: "{{ commentout }}\\1"
  vars:
    lookbehind: "{{ lin_compress_logs |bool |ternary('(?:#\\s*)','(?<!#)') }}"
    commentout: "{{ lin_compress_logs |bool |ternary('','#') }}"
  when: lin_compress_logs is not none
...
